new的含义：
    1. 立刻创建一个空对象。
        var obj = new Object(); // 创建一个空对象
        var obj = {}; // 也是创建一个空对象
    2. 把this指向空对象的地址值。
            var cat1 = new Cat();
            var cat2 = new Cat();
            相当于把cat1直接扔到this的位置。在构造函数内执行一遍
        来给其赋予一定的属性和方法。
    3. 把空对象的内部原型指向构造函数的原型对象，将两者进行关联
        function Cat(){
            this = {};
            this._proto_ = Cat.prototype;
            return this;
            // 以上四步相当于隐式执行的内容。
        }
        // 每个函数都有自己的原型对象。
    4. 当前构造函数执行到最后的时候，
        如果没有return，则返回当前的空对象(空对象是new出来的)。
        如果有return，直接返回return内部的内容。
            可以想象为是创建新对象的过程中，发生了一系列的化学反应，
        最终返回了return内部的内容，其他的都是没有返会必要的内容。

注意事项：
    1. _proto_(内部原型)是所有对象都有的属性
    2. prototype是函数才有的属性
    3. 构造函数名的首字母大写

    4. 当创建了两个不同的示例对象时,示例对象的属性会获取过来并存到内存，
    但是示例对象的方法并不需要再单独创建两个相同的方法，直接把两个对象
    的方法指向函数的原型就好。需要执行该方法的时候，去原型中找到方法并且执行。

    5. 当然如果在构造函数中定义了方法的话，方法会被反复存储多次，只有将其提取到
    函数原型中才能保证节省内存量。

    6. 原型上的属性只能通过原型去设置。
        如果实例对象设置了一个跟原型对象也有的属性时，
    会自动在示例上添加一个自己的属性。

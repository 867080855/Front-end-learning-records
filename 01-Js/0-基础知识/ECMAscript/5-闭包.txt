闭包:
    在程序语言中，所谓闭包，是指语法域位于某个特定的区域，具有持续参照(读写)
位于该区域内自身范围之外的执行域上的非持久型变量值能力的段落。这些外部执行域的
非持久型变量神奇地保留他们在闭包最初定义(或创建)时的值。

    简而言之：可以用一个函数去   访问  另外一个函数的内部变量的方式就是闭包。
             每个函数都算是一个小闭包
    内部变量是局部变量，局部变量不可以为别人随便使用。
    --------------------------------------------------------------
    优点：不产生全局变量,实现属性私有化
    缺点：闭包中的数据会常驻内存，在不用内存的时候要删掉，否则会导致内存溢出
    --------------------------------------------------------------
    function fun(){
        var num = 10;
        function fun1(){
            var key = 20;
            console.log(num);   //外部的变量可以被内部函数所以用
        }
        console.log(key);   //报错，内部函数的变量不能被外部函数使用。
    }
    ---------------------------
    function outFn(){
        var num = 10;
        function inFn(){
            console.log(num);
        }
        return inFn;    //返回inFn函数体，切记不加括号。
    }
    var demo = outFn();
        //返回inFn
            //function inFn(){  console.log(num);   }
    var demo = outFn;
        //返回整个outFn函数体
    ==============================================================
    var box = document.getElementById("box");
    function move(speed){
        return function(){
            box.style.width = speed;
        }
    }





